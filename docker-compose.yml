services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres         # ← keep consistent
      POSTGRES_DB: mortgage_app
    ports:
      - "5434:5432"                       # host:container (host 5433 ok)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mortgage_app"]
      interval: 5s
      timeout: 3s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_4LW_COMMANDS_WHITELIST=ruok,srvr,mntr,stat
    ports: ["2181:2181"]
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 127.0.0.1 2181 | grep imok"]
      interval: 5s
      timeout: 3s
      retries: 20

  kafka:
    image: bitnami/kafka:3.6
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092          # listen on all ifaces
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 # advertise internal DNS
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    ports: ["9092:9092"]
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 30

  backend:
    image: mortgage-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Inside the network, use service name + 5432 (not 5433)
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mortgage_app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres                # ← matches postgres service
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy